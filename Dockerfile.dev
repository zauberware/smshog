# Backend development stage
FROM node:18-alpine AS backend-dev

WORKDIR /app/backend

# Install curl for health checks and ts-node-dev for faster reloading
RUN apk add --no-cache curl && \
    npm install -g ts-node-dev typescript

# Copy only package files first to leverage Docker cache
COPY backend/package*.json ./
RUN npm install --no-optional

# Add a simple health check endpoint
RUN echo 'console.log("Adding health endpoint to index.ts")' && \
    mkdir -p /tmp-health && \
    echo "// Add a health check endpoint\napp.get('/health', (_, res) => { res.status(200).send('OK'); });" > /tmp-health/health-endpoint.snippet

# Expose port
EXPOSE 3000

# Command to run in development mode
CMD ["npm", "run", "dev"]

# Frontend development stage
FROM node:18-alpine AS frontend-dev

WORKDIR /app/frontend

# Install development dependencies
RUN apk add --no-cache git

# Copy package.json and install dependencies
COPY frontend/package*.json ./
RUN npm install

# No need to copy source files as they will be mounted as volumes

# Expose frontend port
EXPOSE 8080

# Command to run Vite dev server on all interfaces
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
